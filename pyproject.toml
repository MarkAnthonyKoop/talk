[build-system]
requires = ["setuptools>=42.0.0", "wheel>=0.37.0"]
build-backend = "setuptools.build_meta"

[project]
name = "talk"
dynamic = ["version"]
description = "Autonomous CLI for continuous, unattended improvement of any codebase"
readme = "README.md"
authors = [
    {name = "Mark Anthony Koop", email = "mark@example.com"}
]
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Code Generators",
]
keywords = ["code", "automation", "refactoring", "improvement", "cli", "development"]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "libcst>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/MarkAnthonyKoop/talk"
"Bug Tracker" = "https://github.com/MarkAnthonyKoop/talk/issues"
"Source" = "https://github.com/MarkAnthonyKoop/talk"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]
analysis = [
    "radon>=6.0.0",
    "networkx>=3.0.0",
]
all = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "radon>=6.0.0",
    "networkx>=3.0.0",
]

[project.scripts]
talk = "talk.cli:main"

[tool.setuptools]
packages = ["talk"]

[tool.setuptools.dynamic]
version = {attr = "talk.__version__"}

[tool.black]
line-length = 100
target-version = ["py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "W", "I", "B", "C4", "ARG", "SIM"]
ignore = ["E203", "E501"]
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.isort]
known-first-party = ["talk"]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--verbose"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.run]
source = ["talk"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py310, py311

[testenv]
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
commands =
    pytest {posargs:tests}
"""
